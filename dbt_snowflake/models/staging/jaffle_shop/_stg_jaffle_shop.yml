version: 2

models:
  - name: stg_customers
    description: Customer data with basic cleaning and transformation applied, one row per customer.
    config:
      tags: ['model_level']
    columns:
      - name: customer_id
        description: The unique key for each customer.
        config:
          tags: ['column_level']
        tests:
          - not_null
          - unique:
              config:
                tags: ['test_level']

  - name: stg_locations
    description: List of open locations with basic cleaning and transformation applied, one row per location.
    columns:
      - name: location_id
        description: The unique key for each location.
        tests:
          - not_null
          - unique

  - name: stg_order_items
    description: Individual food and drink items that make up our orders, one row per item.
    columns:
      - name: order_item_id
        description: The unique key for each order item.
        tests:
          - not_null
          - unique

  - name: stg_orders
    description: Order data with basic cleaning and transformation applied, one row per order.
    tests:
      - dbt_utils.unique_combination_of_columns:
          arguments:
            combination_of_columns:
              - order_id
              - customer_id
    columns:
      - name: order_id
        description: The unique key for each order.
        tests:
          - not_null
          - unique
          - is_unique_custom:
              arguments:
                condition: "ordered_at <= '2024-09-07' and ordered_at >= '2024-09-01'"
          - dbt_expectations.expect_column_values_to_be_unique:
              arguments:
                row_condition: "customer_id is not null"
      - name: ordered_at
        description: used to find updated date
        config:
          tags: ['updated_at']
      - name: _pk
        description: The unique key - using surrogate key
        tests:
          - unique

  - name: stg_products
    description: Product (food and drink items that can be ordered) data with basic cleaning and transformation applied, one row per product.
    columns:
      - name: product_id
        description: The unique key for each product.
        tests:
          - not_null
          - unique

  - name: stg_supplies
    description: >
      List of our supply expenses data with basic cleaning and transformation applied.

      One row per supply cost, not per supply. As supply costs fluctuate they receive a new row with a new UUID. Thus there can be multiple rows per supply_id.
    columns:
      - name: supply_uuid
        description: The unique key of our supplies per cost.
        tests:
          - not_null
          - unique